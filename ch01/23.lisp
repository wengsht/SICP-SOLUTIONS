(define (small-divisor n)
  (define (divide? x n)
    (= 0 (remainder n x)))
  (define (square x) (* x x))
  (define (next x)
    (if (even? x)
      (+ x 1)
      (+ x 2)))
  (define (inner-divisor n x)
    (cond ((> (square x) n) n)
          ((divide? x n) x)
          (else (inner-divisor n (next x)))))
  (inner-divisor n 2))
(define (prime? n)
  (= n (small-divisor n)))
(define (timed-prime-test n)
  (newline)
  (display n)
  (start-prime-test n (runtime)))
(define (start-prime-test n start-time)
  (if (prime? n)
    (report-prime (- (runtime) start-time))))
(define (report-prime elapsed-time)
  (display " *** ")
  (display elapsed-time))
(define (search-for-primes a b)
  (define (inner a b)
    (if (<= a b) 
      (timed-prime-test a))
    (if (<= a b)
      (inner (+ a 2) b)))
  (inner (if (even? a) (+ a 1) a) b))
(search-for-primes 100000000000 100000000050) ;0.3
(search-for-primes 1000000000020 1000000000050) ; 1.0
