(define (even? n)
  (= (remainder n 2) 0))
(define (fast-expt x n)
  (_fast-expt x n 1))
(define (_fast-expt x n tmp)
  (cond ((= n 0) tmp)
        ((= n 1) (* x tmp))
        (else (cond ((even? n) (_fast-expt (* x x) (/ n 2) tmp))
                    (else (_fast-expt (* x x) (/ n 2) (* tmp x))))))) 
(fast-expt 3 8)
