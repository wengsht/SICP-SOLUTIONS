(define (even? n)
  (= (remainder n 2) 0))
(define (double x)
  (* x 2))
(define (halve x)
  (/ x 2))
(define (mul a b)
  (_mul a b 0))
(define (_mul a b tmp)
  (cond ((= b 0) tmp)
        ((= b 1) (+ tmp a))
        ((even? a) (_mul (double a) (halve b) tmp))
        (else (_mul (double a) (halve b) (+ a tmp)))))
(mul 8 8)
