(define (fast-exp-mod base e mo)
  (cond ((= e 0) 1)
        ((even? e) (remainder (square (fast-exp-mod base (/ e 2) mo)) mo))
        (else (remainder (* (square (fast-exp-mod base (/ (- e 1) 2) mo)) base) mo))))
(define (fermat-test a n)
  (define (try-it a)
    (= (fast-exp-mod a n n) a))
  (try-it a))
(define (fast-prime? n x)
  (cond ((= x n) true)
        ((fermat-test x n) (fast-prime? n (+ x 1)))
        (else false)))
(define (prime? n)
  (fast-prime? n 2))
(prime? 561)
(prime? 1105)
(prime? 1729)
(prime? 2465)
(prime? 2821)
(prime? 6601)
