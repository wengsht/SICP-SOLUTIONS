(include "my_math.lisp")
(define (expmod base ex m)
  (cond ((= ex 0) 1)
        ((or (= base 1) (= base (- m 1))) 1)
        ((= (remainder (pow2 base) m) 1) 0)
        ((even? ex) (remainder (pow2 (expmod base (/ ex 2) m)) m))
        (else (remainder (* base (expmod base (- ex 1) m)) m))))
(define (fermat-test n)
  (define (try-it a)
    (= (expmod a (- n 1) n) 1))
  (try-it (+ 1 (random (- n 1)))))
(define (fast-prime? n times)
  (cond ((= times 0) true)
        ((fermat-test n) (fast-prime? n (- times 1)))
        (else false)))
(fast-prime? 561 25)
(fast-prime? 1105 25)
(fast-prime? 1729 25)
(fast-prime? 2465 25)
(fast-prime? 2821 25)
(fast-prime? 6601 25)
(fast-prime? 17 25)
